#3.5.4.1-UAT
ALTER TABLE USERS DROP COLUMN AUTH_TYPE;
ALTER TABLE USERS ADD AUTH_TYPE VARCHAR2(10);
COMMIT;

ALTER TABLE users ADD (last_lockout_time NUMBER ,retries_left NUMBER);

#3.6.3 - start
ALTER TABLE fallout_configs DROP COLUMN scheduler_frequency;
ALTER TABLE fallout_configs ADD scheduler_frequency VARCHAR2(255);
#3.6.3 - stop

#OTP AUDIT LOG - start
CREATE TABLE otp_audit_logs_send (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP NOSCALE  NOT NULL ENABLE,
    action VARCHAR2(2),
    application_name VARCHAR2(255),
    reference_number VARCHAR2(20),
    status VARCHAR2(1),
    timestamp TIMESTAMP,
    user_id VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABlE otp_audit_logs_validate (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP NOSCALE  NOT NULL ENABLE,
    reference_number VARCHAR2(20),
    status VARCHAR2(1),
    timestamp TIMESTAMP,
    send_id NUMBER,
    CONSTRAINT fk_send_validate_otp FOREIGN KEY (send_id) REFERENCES otp_audit_logs_send(id),
    PRIMARY KEY (id)
);
#OTP AUDIT LOG - end
CREATE TABLE totp_audit_trail (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	date_time_created TIMESTAMP,
	date_time_modified TIMESTAMP,
	version NUMBER,
	application_name VARCHAR2(50 BYTE),
	comments VARCHAR2(255 BYTE),
	identifier_name VARCHAR2(255 BYTE),
	identifier_value VARCHAR2(255 BYTE),
	reference_number VARCHAR2(255 BYTE),
	totp_status VARCHAR2(255 BYTE),
	user_account_id VARCHAR2(255 BYTE),
	 PRIMARY KEY (id)
   );

#3.6.4 - start

CREATE INDEX idx_fallout_data_user_id ON fallout_data (ft42_user_id);
CREATE INDEX idx_fallout_data_mobile_no ON fallout_data (actual_mobile_no,
new_mobile_no,old_mobile_no);
CREATE INDEX idx_fallout_data_rcretime ON fallout_data (R_CRE_TIME);
CREATE INDEX idx_fallout_data_time ON fallout_data (R_CRE_TIME, R_MOD_TIME);
CREATE INDEX idx_fallout_data_status ON fallout_data (status);
CREATE INDEX idx_fallout_data_operation ON fallout_data (operation);

create table ldap_details (id  NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP NOSCALE  NOT NULL ENABLE, date_time_created timestamp, date_time_modified timestamp, version number(10), client_address varchar2(255), connection_url varchar2(255), domain_name varchar2(255), ssl_enabled char(1), user_domain_name varchar2(255), primary key (id));

create table admin_audit_logs (id NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP NOSCALE  NOT NULL ENABLE, date_time_created timestamp, date_time_modified timestamp, version number(10), login_time timestamp, logout_time timestamp, role varchar2(255), session_status varchar2(1), status varchar2(5), username varchar2(64), primary key (id));
ALTER TABLE ldap_details ADD CONSTRAINT domain_name_constraint UNIQUE(user_domain_name);
alter table applications add is_fcm_multidevice char(1);
CREATE TABLE configs(
    id INTEGER generated always as identity(start with 1 increment by 1),
    date_time_created TIMESTAMP,
    date_time_modified TIMESTAMP,
    version INTEGER, key VARCHAR(255),
    type VARCHAR(255), value VARCHAR(255)
);

ALTER TABLE configs ADD CONSTRAINT unique_config_key UNIQUE (key);


CREATE INDEX idx_otp_data_userid ON otp_audit_logs_send (user_id);
CREATE INDEX idx_otp_data_application ON otp_audit_logs_send (application_name);
CREATE INDEX idx_otp_data_timestamp ON otp_audit_logs_send (timestamp);

CREATE INDEX idx_transaction_id ON auth_attempts_history (transaction_id);
CREATE INDEX idx_attempt_type ON auth_attempts_history (attempt_type);
CREATE INDEX idx_approval_attempt_time ON auth_attempts_history (date_time_created,date_time_modified);
CREATE INDEX idx_approval_attempt_time_mod ON auth_attempts_history (date_time_modified);
#3.6.4 - end
commit ;

CREATE INDEX  role_idx ON admin_audit_logs(role);
CREATE INDEX  status_idx ON admin_audit_logs(status);
CREATE INDEX  username_idx ON admin_audit_logs(username);
CREATE INDEX  login_time_idx ON admin_audit_logs(login_time);
CREATE INDEX  totp_status_idx ON totp_audit_trail(totp_status);
CREATE INDEX  application_name_idx ON totp_audit_trail(application_name);
CREATE INDEX  identifier_value_idx ON totp_audit_trail(identifier_value);
CREATE INDEX  date_time_created_idx ON totp_audit_trail(date_time_created);

#3.6.5

ALTER TABLE applications ADD (refresh_token_lifespan NUMBER);


#template Details

CREATE TABLE ft42dbadmin.template_details (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date_time_created TIMESTAMP,
    date_time_modified TIMESTAMP,
    version NUMBER(10),
    template VARCHAR2(225),
    template_id VARCHAR2(9),
    type VARCHAR2(5),
    CONSTRAINT template_details_pk PRIMARY KEY (id)
);

CREATE TABLE ft42dbadmin.validation_rule (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date_time_created TIMESTAMP,
    date_time_modified TIMESTAMP,
    version NUMBER(10),
    template_rule VARCHAR2(255),
     validation_return NUMBER(1),
    template_id NUMBER(19),
    CONSTRAINT validation_rule_pk PRIMARY KEY (id)
);


ALTER TABLE ft42dbadmin.validation_rule
ADD CONSTRAINT fk_validation_rule_template_id
FOREIGN KEY (template_id)
REFERENCES ft42dbadmin.template_details (id);


#3.6.5
ALTER TABLE users ADD CONSTRAINT unique_account_id UNIQUE (account_id);
commit;
